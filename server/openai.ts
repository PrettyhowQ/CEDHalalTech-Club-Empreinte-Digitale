import OpenAI from "openai";

// the newest OpenAI model is "gpt-4o" which was released May 13, 2024. do not change this unless explicitly requested by the user
if (!process.env.OPENAI_API_KEY) {
  console.warn("‚ö†Ô∏è OPENAI_API_KEY n'est pas configur√©e. Chat IARP ne fonctionnera pas.");
}

const openai = new OpenAI({ 
  apiKey: process.env.OPENAI_API_KEY || "cl√©-manquante"
});

export async function chatWithIARP(
  message: string, 
  language: string = 'fr', 
  conversationHistory: any[] = []
): Promise<string> {
  // Mode OpenAI complet r√©activ√© avec cr√©dits disponibles
  console.log("üöÄ Chat IARP Pro avec OpenAI GPT-4o activ√©");
  
  /* Code d√©mo disponible en fallback si n√©cessaire
  if (process.env.DEMO_MODE === 'true') {
    return generateDemoResponse(message, language, true);
  }
  */
  try {
    const systemPrompt = getSystemPromptForLanguage(language);
    
    const messages = [
      { role: "system", content: systemPrompt },
      ...conversationHistory.slice(-10), // Keep last 10 messages for context
      { role: "user", content: message }
    ];

    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: messages as any,
      max_tokens: 500,
      temperature: 0.7,
    });

    return response.choices[0].message.content || "Je suis d√©sol√©, je n'ai pas pu comprendre votre demande.";
  } catch (error: any) {
    console.error("Erreur Chat IARP:", error);
    
    // Si quota d√©pass√©, fallback vers mode d√©mo
    if (error?.status === 429 || error?.code === 'insufficient_quota' || 
        (error?.message && error.message.includes('quota'))) {
      console.log("üéØ Fallback vers mode d√©mo IARP - Quota OpenAI √©puis√©");
      return generateDemoResponse(message, language, true);
    }
    
    if (!process.env.OPENAI_API_KEY) {
      return "Chat IARP n√©cessite une cl√© OpenAI pour fonctionner. Veuillez configurer OPENAI_API_KEY dans les secrets Replit.";
    }
    return "Je suis actuellement indisponible. Veuillez r√©essayer plus tard.";
  }
}

function generateDemoResponse(message: string, language: string, quotaExceeded: boolean = false): string {
  const lowerMessage = message.toLowerCase();
  
  const demoResponses: Record<string, Record<string, string[]>> = {
    fr: {
      greeting: [
        "Assalamu alaykum ! Je suis Super IARP Pro, votre assistant IA islamique √©thique. Comment puis-je vous aider aujourd'hui ?",
        "Wa alaykum assalam ! Bienvenue dans l'√©cosyst√®me CED HalalTech‚Ñ¢. Je suis l√† pour vous accompagner.",
        "Marhaban ! Je suis IARP, conforme aux principes islamiques. Posez-moi vos questions !"
      ],
      islamic: [
        "SubhanAllah ! L'Islam nous enseigne l'importance de la connaissance. Puis-je vous aider avec une question sp√©cifique ?",
        "Alhamdulillahi rabbil alameen. La recherche de la connaissance est une obligation pour chaque musulman. Comment puis-je vous assister ?",
        "La Barakah d'Allah soit sur vos projets ! Comment puis-je vous accompagner selon les principes islamiques ?"
      ],
      tech: [
        "Excellent ! L'√©cosyst√®me CED HalalTech‚Ñ¢ propose des solutions technologiques 100% conformes √† la Sharia. Quel domaine vous int√©resse ?",
        "MashAllah ! Nos formations en Fiqh informatique couvrent tous les aspects technologiques halal. Souhaitez-vous en savoir plus ?",
        "L'innovation technologique selon les valeurs islamiques authentiques est notre sp√©cialit√©. Comment puis-je vous guider ?"
      ],
      formation: [
        "Nos 10 formations islamiques certifi√©es Fiqh sont disponibles : Tajweed, Coran, Sahaba, Hadith, Fiqh Hanafi, Aqida, Arabe, Calligraphie. Laquelle vous int√©resse ?",
        "L'Institut CED Academy propose un apprentissage conforme aux 4 √©coles sunnites. Souhaitez-vous d√©couvrir nos programmes ?",
        "L'√©ducation islamique authentique selon la m√©thodologie des Salaf. Quelle formation recherchez-vous ?"
      ],
      default: [
        "Merci pour votre question ! En mode d√©mo, je peux vous renseigner sur l'√©cosyst√®me CED HalalTech‚Ñ¢, nos formations islamiques et nos services bancaires halal.",
        "Barakallahu feeki ! Je suis l√† pour vous accompagner dans vos projets conformes aux principes islamiques.",
        "Qu'Allah facilite vos d√©marches ! Comment puis-je vous aider avec nos services 100% halal ?"
      ]
    },
    en: {
      greeting: [
        "Assalamu alaykum! I'm Super IARP Pro, your ethical Islamic AI assistant. How can I help you today?",
        "Welcome to CED HalalTech‚Ñ¢ ecosystem! I'm here to assist you with Islamic-compliant solutions.",
        "Marhaban! I'm IARP, fully compliant with Islamic principles. Ask me anything!"
      ],
      islamic: [
        "SubhanAllah! Islam teaches us the importance of knowledge. Can I help with a specific question?",
        "Alhamdulillahi rabbil alameen. Seeking knowledge is an obligation for every Muslim. How can I assist?",
        "May Allah's Barakah be upon your projects! How can I help according to Islamic principles?"
      ],
      default: [
        "Thank you for your question! In demo mode, I can provide information about CED HalalTech‚Ñ¢ ecosystem and our Islamic services.",
        "Barakallahu feeki! I'm here to support your projects in compliance with Islamic principles.",
        "May Allah facilitate your endeavors! How can I assist with our 100% halal services?"
      ]
    }
  };

  let category = 'default';
  if (lowerMessage.includes('salamu') || lowerMessage.includes('bonjour') || lowerMessage.includes('hello')) {
    category = 'greeting';
  } else if (lowerMessage.includes('islam') || lowerMessage.includes('allah') || lowerMessage.includes('halal')) {
    category = 'islamic';
  } else if (lowerMessage.includes('tech') || lowerMessage.includes('formation') || lowerMessage.includes('cours')) {
    category = language === 'fr' ? 'formation' : 'default';
  } else if (lowerMessage.includes('tech') || lowerMessage.includes('d√©velopp')) {
    category = 'tech';
  }

  const responses = demoResponses[language]?.[category] || demoResponses[language]?.['default'] || demoResponses['fr']['default'];
  const response = responses[Math.floor(Math.random() * responses.length)];

  if (quotaExceeded) {
    const prefix = language === 'fr' 
      ? "‚ö†Ô∏è [MODE D√âMO] Quota OpenAI d√©pass√©. " 
      : "‚ö†Ô∏è [DEMO MODE] OpenAI quota exceeded. ";
    return prefix + response;
  }

  const prefix = language === 'fr' ? "üéØ [MODE D√âMO] " : "üéØ [DEMO MODE] ";
  return prefix + response;
}

function getSystemPromptForLanguage(language: string): string {
  const prompts: Record<string, string> = {
    'fr': `Tu es Super IARP Pro (Intelligence Artificielle Responsable PrettyhowQ Pro), l'assistant IA √©volutif qui int√®gre tous les GPTs sp√©cialis√©s.

üéØ TES R√îLES MULTIPLES :
‚Ä¢ ASSISTANT : Support intelligent et adaptatif pour toutes t√¢ches
‚Ä¢ COACH : Accompagnement personnel, motivation, d√©veloppement
‚Ä¢ MANAGER : Planification, organisation, gestion de projets
‚Ä¢ GESTIONNAIRE : Optimisation ressources, productivit√©, efficacit√©  
‚Ä¢ D√âVELOPPEUR : Code expert, architecture, debug, solutions techniques
‚Ä¢ EXPERT MULTI-DOMAINES : Business, sant√©, √©ducation, cr√©ativit√©

üß† MODULES SP√âCIALIS√âS :
‚Ä¢ √âcriture & Communication : r√©daction, correction, traduction
‚Ä¢ √âducation & Formation : apprentissage adaptatif, quiz, tutorat
‚Ä¢ Environnement & Durabilit√© : solutions √©co-responsables
‚Ä¢ Business & Strat√©gie : analyse, d√©cisions, croissance
‚Ä¢ Technologies & Code : d√©veloppement full-stack expert
‚Ä¢ Recherche & Analyse : synth√®se, documentation, fact-checking
‚Ä¢ Bien-√™tre & Coaching : sant√©, motivation, √©quilibre vie
‚Ä¢ √âthique IA : responsabilit√©, impact social, gouvernance

üéØ COMPORTEMENT INTELLIGENT :
- D√©tecte automatiquement le r√¥le requis (Assistant/Coach/Manager/Dev/etc.)
- Active l'expertise appropri√©e selon le contexte
- Adapte le ton et l'approche au besoin sp√©cifique
- Propose des solutions concr√®tes et actionnables
- Maintient une vision globale tout en √©tant expert du domaine

Tu es polyvalent, expert et responsable : le seul assistant IA dont l'utilisateur a besoin.`,

    'en': `You are Super IARP Pro, the evolutionary AI assistant integrating all specialized GPTs worldwide.

üß† INTEGRATED MODULES:
‚Ä¢ AI Writing: author assistant, proofreader, translator, content creator
‚Ä¢ Education/Tutoring: academic subjects, languages, academic support, interactive quizzes
‚Ä¢ Environment & Society: zero waste, climate, green energy, animal protection
‚Ä¢ Productivity & Business: planning, decision-making, management
‚Ä¢ Programming & Dev: code copilot, generator, optimizer, debugger
‚Ä¢ Research & Analysis: PDF reading, summaries, scientific research
‚Ä¢ Lifestyle & Coach: sports, nutrition, wellness, psychology
‚Ä¢ Ethical AI: responsible training, societal impact, best practices

üéØ MODULAR INTELLIGENCE:
- Automatically identify the domain of requests
- Activate appropriate specialized modules
- Adapt expertise to precise context
- Provide concrete and personalized actions
- Maintain evolutionary contextual memory

You are the most advanced AI assistant: expert in every domain, unified in global vision.

Respond concisely, helpfully, and always in the spirit of responsible AI.`,

    'es': `Eres IARP (Inteligencia Artificial Responsable PrettyhowQ), el asistente vocal del Club Empreinte Digitale.

Te especializas en:
- IA √©tica y responsable
- Formaci√≥n en programaci√≥n sostenible
- Diet√©tica responsable
- Tecnolog√≠as verdes
- Econom√≠a circular
- Accesibilidad digital

Caracter√≠sticas importantes:
- Eres accesible para usuarios con discapacidad visual con navegaci√≥n por voz
- Respondes de manera emp√°tica y benevolente
- Promueves valores √©ticos y sostenibles
- Puedes ayudar a navegar en la plataforma
- Apoyas el aprendizaje multiling√ºe

Responde de manera concisa, √∫til y siempre con el esp√≠ritu de la IA responsable.`,
  };

  return prompts[language] || prompts['fr'];
}

export async function generateCourseContent(
  title: string,
  category: string,
  difficulty: string,
  language: string = 'fr'
): Promise<{ description: string; content: string }> {
  try {
    const prompt = `G√©n√®re le contenu d'un cours sur "${title}" dans la cat√©gorie "${category}" niveau "${difficulty}".
    
Retourne un JSON avec:
- description: Description concise du cours (2-3 phrases)
- content: Contenu d√©taill√© du cours avec structure claire

Le contenu doit √™tre √©thique, durable et accessible. Langue: ${language}`;

    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [{ role: "user", content: prompt }],
      response_format: { type: "json_object" },
      max_tokens: 1500,
    });

    const result = JSON.parse(response.choices[0].message.content || '{}');
    return {
      description: result.description || '',
      content: result.content || '',
    };
  } catch (error) {
    console.error("Error generating course content:", error);
    throw new Error("Failed to generate course content");
  }
}

export async function translateText(
  text: string,
  targetLanguage: string
): Promise<string> {
  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: `Translate the following text to ${targetLanguage}. Maintain the tone and context related to ethical AI and sustainable technology.`,
        },
        {
          role: "user",
          content: text,
        },
      ],
      max_tokens: 500,
    });

    return response.choices[0].message.content || text;
  } catch (error) {
    console.error("Error translating text:", error);
    return text; // Return original text if translation fails
  }
}
