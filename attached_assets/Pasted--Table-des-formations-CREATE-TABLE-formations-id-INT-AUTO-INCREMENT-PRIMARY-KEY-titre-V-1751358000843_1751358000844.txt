-- Table des formations
CREATE TABLE formations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titre VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    niveau ENUM('Débutant', 'Intermédiaire', 'Avancé') DEFAULT 'Débutant',
    categorie VARCHAR(100),
    langue VARCHAR(10) DEFAULT 'fr',
    date_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    date_mise_a_jour TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Table des modules pour chaque formation (ex : chapitres, unités)
CREATE TABLE modules (
    id INT AUTO_INCREMENT PRIMARY KEY,
    formation_id INT NOT NULL,
    titre VARCHAR(255) NOT NULL,
    description TEXT,
    ordre INT DEFAULT 1,
    FOREIGN KEY (formation_id) REFERENCES formations(id) ON DELETE CASCADE
);

-- Table des leçons/vidéos/articles
CREATE TABLE lecons (
    id INT AUTO_INCREMENT PRIMARY KEY,
    module_id INT NOT NULL,
    titre VARCHAR(255) NOT NULL,
    type ENUM('video', 'texte', 'quiz', 'audio') DEFAULT 'texte',
    contenu TEXT, -- URL, texte, JSON, selon type
    duree INT, -- durée en minutes
    ordre INT DEFAULT 1,
    FOREIGN KEY (module_id) REFERENCES modules(id) ON DELETE CASCADE
);

-- Table des utilisateurs (optionnel pour gérer les inscriptions)
CREATE TABLE utilisateurs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    mot_de_passe VARCHAR(255) NOT NULL, -- hashed
    role ENUM('étudiant', 'formateur', 'admin') DEFAULT 'étudiant',
    date_inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table d'inscription aux formations
CREATE TABLE inscriptions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    utilisateur_id INT NOT NULL,
    formation_id INT NOT NULL,
    date_inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    statut ENUM('en cours', 'terminé', 'abandonné') DEFAULT 'en cours',
    FOREIGN KEY (utilisateur_id) REFERENCES utilisateurs(id) ON DELETE CASCADE,
    FOREIGN KEY (formation_id) REFERENCES formations(id) ON DELETE CASCADE
);