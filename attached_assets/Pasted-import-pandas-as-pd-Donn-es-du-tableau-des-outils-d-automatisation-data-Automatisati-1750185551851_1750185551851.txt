import pandas as pd

# Données du tableau des outils d'automatisation
data = [
    ["🔄 Automatisation No-Code", "Zapier", "Connecte +5000 apps (Google, Notion, Gmail…)", "🔰 Débutant", "✅ Planning, IA, Email, CRM"],
    ["🔄 Automatisation No-Code", "Make (ex-Integromat)", "Scénarios visuels complexes, plus personnalisable que Zapier", "⚙️ Intermédiaire", "✅ Email IA + Formulaires"],
    ["🔄 Automatisation No-Code", "Pabbly Connect", "Alternative à Zapier sans limite de tâches", "🔰 Débutant", "✅ vCard IA, SMS, Email"],
    ["🔄 Automatisation Code", "n8n", "Open source, automation auto-hébergée (RGPD Friendly)", "💻 Avancé", "✅ Version Suisse RGPD"],
    ["🔄 Automatisation Code", "Python + cron + API REST", "Automatisation backend avec scripts personnalisés", "💻 Avancé", "✅ Modules IA métiers"],
    ["🤖 Agent IA / Automation", "AutoGPT / GPT-Engineer", "Agent autonome avec objectifs et mémoire", "🧠 Avancé", "✅ Super IARP + Coach IA"],
    ["🤖 Agent IA / Automation", "CrewAI / LangGraph", "Organisation d'agents IA collaboratifs", "🧠 Avancé", "✅ Apprentissage structuré"],
    ["🤖 Agent IA / Automation", "Superagent.sh", "Déploiement rapide d'agents GPT dans le cloud", "⚙️ Intermédiaire", "✅ IA personnalisées"],
    ["🤖 Agent IA / Automation", "Flowise / Langflow", "Interface visuelle pour workflows LLM", "🔰 Débutant", "✅ Générateurs interactifs"],
    ["📡 API & Intégrations", "OpenAI API + LangChain", "Intégrer tous les GPTs (écriture, analyse, etc.)", "💻 Avancé", "✅ Super IARP Pro"],
    ["📡 API & Intégrations", "Google Workspace + Apps Script", "Automatisations Google Calendar, Docs, Gmail", "⚙️ Intermédiaire", "✅ Planning IA + Formations"],
    ["📡 API & Intégrations", "Notion API + AI", "Centralisation du contenu + IA", "🔰 Débutant", "✅ Tableau de bord apprenant"],
    ["📦 Data & Monitoring", "Airtable + Scripts IA", "Base de données + automatisations intelligentes", "🔰 Débutant", "✅ Fiches formations + CRM"],
    ["📦 Data & Monitoring", "Replit + Flask / FastAPI", "Développement d’API IA internes", "💻 Avancé", "✅ Backend IA PrettyhowQ"],
    ["📦 Data & Monitoring", "PostHog / Plausible", "Analytics éthique pour interactions IA", "⚙️ Intermédiaire", "✅ Statistiques anonymisées"],
    ["🔐 Éthique & RGPD", "Swiss hosting + GDPR proxies", "Hébergement en Suisse, traitement sécurisé", "🔐 Expert", "✅ Conforme RGPD + Éthique"]
]

# Création du DataFrame
df_tools = pd.DataFrame(data, columns=["Catégorie", "Outil / Plateforme", "Description principale", "Niveau technique", "Intégration dans CED & IARP Pro"])

# Affichage du tableau pour l'utilisateur
import ace_tools as tools; tools.display_dataframe_to_user(name="Outils d'automatisation pour CED & IARP Pro", dataframe=df_tools)

# Sauvegarde aux formats demandés
df_tools.to_markdown("/mnt/data/automatisation_CED_IARP.md", index=False)
df_tools.to_csv("/mnt/data/automatisation_CED_IARP.csv", index=False)
df_tools.to_excel("/mnt/data/automatisation_CED_IARP.xlsx", index=False)

"/mnt/data/automatisation_CED_IARP.md", "/mnt/data/automatisation_CED_IARP.csv", "/mnt/data/automatisation_CED_IARP.xlsx"