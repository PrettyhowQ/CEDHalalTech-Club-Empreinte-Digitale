version: '3.8'

services:
  # Application CED HalalTech™
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ced-halaltech
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://ced_user:ced_password@postgres:5432/ced_halaltech
      - SESSION_SECRET=your-super-secret-session-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ced-network

  # Base de données PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: ced-postgres
    environment:
      - POSTGRES_DB=ced_halaltech
      - POSTGRES_USER=ced_user
      - POSTGRES_PASSWORD=ced_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ced_user -d ced_halaltech"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - ced-network

  # Redis pour sessions (optionnel)
  redis:
    image: redis:7-alpine
    container_name: ced-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - ced-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ced-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - ced-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ced-network:
    driver: bridge